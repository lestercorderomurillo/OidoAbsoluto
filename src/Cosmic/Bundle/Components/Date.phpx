<?php

namespace Cosmic\Bundle\Components;

use Cosmic\DOM\InlineComponent;

class Date extends InlineComponent
{
    public function __construct(string $id, string $formId)
    {
        $this->id = $id;
        $this->formId = $formId;
        $this->lowestAgePossible = 12;
        $this->maxAgePossible = 100;
    }

    public function scripts()
    {
        return <<<JS

            function awake(){

                attach("$this->formId", "submit", function(event) {
                    return component.handleSubmit(event);
                });

                /*$("#$this->formId").on("submit", function(event) {
                    return component.handleSubmit(event);
                });*/

            }

            function handleChange(event) {

                resetValidationError("$this->id");
                component.validateDate();
            }

            function handleSubmit(event) {

                component.handleChange(event)

                if(hasValidationErrors()){
                    return false;
                }
                
                document.getElementById("$this->id").value = component.generateDateString();
                return true;
            }

            function isDateInCurrentLifetime(year, month, day) {

                if ((!(year >= 1950 && year <= new Date().getFullYear())) ||
                    (!(month >= 1 && month <= 12)) ||
                    (!(day >= 1 && day <= 31)) ) {
                    return false;
                }

                return true;

            }

            function isDatePossible(year, month, day) {

                var maxDays = 31;

                if (month == 2) {
                    maxDays = 28;

                    var isLeapYear = ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);
                    if (isLeapYear) {
                        maxDays = 29;
                    }

                } else if (month % 2 == 0) {
                    maxDays = 30;
                }
                
                if (day > maxDays) {
                    return false;
                }

                return true;
            }
        
            function validateDate() {

                resetValidationError("$this->id");

                var maxYear = new Date().getFullYear();
                
                var year = document.getElementById("$this->id" + "_yy").value;
                var month = document.getElementById("$this->id" + "_mm").value;
                var days = document.getElementById("$this->id" + "_dd").value;

                var dateString = year + "/" + month + "/" + days;
                var dateObject = Date.parse(dateString);

                if (!component.isDateInCurrentLifetime(year, month, days)) {
                    setValidationError("$this->id", "La fecha no está en el rango admitido.");
                }

                if (!component.isDatePossible(year, month, days)) {
                    setValidationError("$this->id", "No es una fecha real. Verifique.");
                }

                if (maxYear - year < $this->lowestAgePossible) {
                    setValidationError("$this->id", "Se requiere de minimo $this->lowestAgePossible años de edad.");
                }

            }

            function generateDateString() 
            {
                var year = document.getElementById("$this->id" + "_yy").value;
                var month = document.getElementById("$this->id" + "_mm").value;
                var days = document.getElementById("$this->id" + "_dd").value;

                return year + "/" + month + "/" + days;
            }

        JS;
    }

    public function render()
    {
        $this->_template = "form-control d-inline Field Focuseable text-small";

        return {{
            <input (load)="awake()" id&name="{id}" type="hidden">
            <input (change)="handleChange()" id&name="{id}_dd" class="{_template}" type="text" maxlength="2" style="max-width: 50px;" placeholder="DD"> / 
            <input (change)="handleChange()" id&name="{id}_mm" class="{_template}" type="text" maxlength="2" style="max-width: 50px;" placeholder="MM"> / 
            <input (change)="handleChange()" id&name="{id}_yy" class="{_template}" type="text" maxlength="4" style="max-width: 60px;" placeholder="YYYY">
        }};
    }
}

publish(Date::class);
