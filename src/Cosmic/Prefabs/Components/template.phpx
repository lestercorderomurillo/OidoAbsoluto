<?php

namespace Cosmic\Prefabs\Components;

use Cosmic\DOM\CosmicComponent;

//export(Minimal::class, View::class);

class Minimal extends CosmicComponent
{
    return <<<'BINDER'
        <div>
        </div>
    'BINDER';
}

class View extends CosmicComponent
{
    /*const Styles = [
        "Forms.scss"
    ];*/

    /*const Imports = [
        ViewComponent::class
    ];*/

    string $title;
    string $language = "es";

    /*public function make(): string
    {
        return <<<JS
            /*setState({
                "counter" : $title,
                "language" : $language
            });
        JS;
    }*/
/*
    public function actions(): string
    {
        return <<<JS
            function incrementCount(arg1)
            {
                setState("counter", ++arg1);
                console.log(getState("counter"));
            }
        JS;
    }*/

    public function render(): string
    {
        return <<<'BINDER'
            <!DOCTYPE html>
            <html scope="global" lang="{ language }">
                <head>
                    <title>{ title }</title>
                    <meta style="font-size: 12px;" charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <Foreach using="iterator" from="{ public.headers }">
                        <meta name="{ parent.iterator.name }" content="{ parent.iterator.content }">
                    </Foreach>
                    <Foreach using="iterator" from="{ public.scripts-bundles }">
                        <script src="{ parent.iterator }"></script>
                    </Foreach>
                    <link rel="preconnect" href="https://fonts.gstatic.com">
                    <Foreach using="iterator" from="{ public.styles }">
                        <link rel="stylesheet" href="{ parent.iterator }">
                    </Foreach>
                </head>
                <div class="container">
                    <br>
                    { body }
                    [ 2 + { parameter1 } * 3  - { parameter2 } + 3]
                    <Button onClick="incrementCount('{ token }', '1'); function2('2');"></Button>
                    <button object="87g88fn" onclick="View_incrementCount('dq2dadw', '2', '1');"></button>

                    <Button onClick(passthrough)="incrementCount({ token }, '1');"></Button>
                    <button object="sa1kfd3" onclick="Button_incrementCount('sa1kfd3', '1');"></button>


                    <Button 
                        onClick="incrementCount('1');" 
                        onClick(current)="incrementCount('133');" 
                        onClick(this)="incrementCount('2');" 
                        onClick(public)="registerClick(new Date());">

                        { body }

                    </Button>

                    <button 
                        object="sa1kfd3" 
                        onclick="View_incrementCount('qwexawd', '1');
                                View_incrementCount('qwexawd', '133');
                                Button_incrementCount('sa1kfd3', '1');
                                registerClick(new Date());">

                        { body }

                    </button>

                    <Button onClick="globalAction('alv')"></Button>
                    <button token="x2saB8a" onclick="globalAction('alv')"></button>
                </div>
                { public.callbacks }
                { public.states }
            </html>
        'BINDER';
    }
}
